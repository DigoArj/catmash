{"version":3,"sources":["Utils/elo-utils.ts","Utils/general-utils.ts","Stores/App.tsx","Components/App/App.tsx","Components/Cat/Cat.tsx","Components/CatList/CatList.tsx","Components/Loader/Loader.tsx","Components/PositionedCat/PositionedCat.tsx","Components/Scores/Subcomponents/Overlay.tsx","Components/Scores/Utils/use-wheel-scroll.ts","Components/Scores/Scores.tsx","Components/Scores/Utils/use-scroll-constraints.ts","Components/Title/Title.tsx","Components/Versus/Versus.tsx","Components/Vote/Vote.tsx","serviceWorker.ts","aws-config.ts","index.tsx"],"names":["calculateNewScores","winnerScore","loserScore","qWinner","Math","pow","qLoser","denominator","calculateExpectedScores","eWinner","eLoser","round","getRandom","end","random","AppContext","createContext","loadCats","Promise","resolve","newMash","updateScore","voteForLeft","voteForRight","AppProvider","children","useState","currentMash","setCurrentMash","useCallback","API","get","then","cats","leftIndex","length","rightIndex","min","left","right","winner","a","loser","catId","score","put","body","voteFor","cat","useEffect","Provider","value","useApp","useContext","styles","css","smallStyles","Cat","srcUrl","alt","small","rank","onClick","className","loaded","setLoaded","cx","src","onLoad","style","opacity","loaderStyles","CatList","loading","setLoading","setCats","error","setError","setTimeout","slice","map","i","imageUrl","key","id","imgUrl","position","Loader","white","options","animationData","animationDataWhite","direction","spanStyles","from","to","PositionedCat","Overlay","isOpen","div","initial","animate","transition","duration","pointerEvents","springTo","isAnimating","start","complete","animation","spring","velocity","getVelocity","stiffness","damping","update","v","set","stop","debouncedSpringTo","debounce","openSpring","type","closeSpring","Scores","push","useHistory","y","useMotionValue","zIndex","checkSwipeToDismiss","cardRef","useRef","constraints","ref","measureConstraints","top","bottom","setConstraints","height","useResizeObserver","element","current","viewportHeight","window","innerHeight","contentTop","offsetTop","contentHeight","offsetHeight","scrollableViewport","useScrollConstraints","containerRef","onWheelCallback","isActive","useDomEvent","event","preventDefault","currentY","newY","deltaY","startedAnimation","isWithinBounds","mix","cancel","passive","useWheelScroll","layoutTransition","drag","dragConstraints","onDrag","onUpdate","Title","Versus","Vote","Boolean","location","hostname","match","URL","REGION","Amplify","configure","endpoints","name","endpoint","awsConfig","region","ReactDOM","render","StrictMode","path","component","pathname","useLocation","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.865e03d9.chunk.js","sourcesContent":["// https://en.wikipedia.org/wiki/Elo_rating_system#Mathematical_details\nconst K = 32;\n\nconst calculateExpectedScores = (winnerScore: number, loserScore: number) => {\n  const qWinner = Math.pow(10, winnerScore / 400);\n  const qLoser = Math.pow(10, loserScore / 400);\n\n  const denominator = qWinner + qLoser;\n\n  const eWinner = qWinner / denominator;\n  const eLoser = qLoser / denominator;\n\n  return [eWinner, eLoser];\n};\n\nexport const calculateNewScores: CalculateNewScoresFn = (winnerScore, loserScore) => {\n  const [eWinner, eLoser] = calculateExpectedScores(winnerScore, loserScore);\n\n  const newWinnerScore = Math.round(winnerScore + K * (1 - eWinner));\n  const newLoserScore = Math.round(loserScore + K * (0 - eLoser));\n\n  return [newWinnerScore, newLoserScore];\n};\n","export const getRandom: GetRandomFn = end => Math.round(Math.random() * end);\n","import React, { useContext, createContext, useState, useCallback, useEffect } from 'react';\nimport { calculateNewScores, getRandom } from 'Utils';\nimport { API } from 'aws-amplify';\n\nconst AppContext = createContext<AppContext>({\n  loadCats: () => Promise.resolve([]),\n  newMash: () => {},\n  updateScore: () => Promise.resolve(),\n  voteForLeft: () => {},\n  voteForRight: () => {},\n});\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [currentMash, setCurrentMash] = useState<Mash>();\n\n  const loadCats = useCallback((): Promise<Array<Cat>> => API.get('cats', '/cats', {}), []);\n\n  const newMash = useCallback(() => {\n    loadCats().then(cats => {\n      const leftIndex = getRandom(cats.length);\n\n      // choose a random index around left index so that we have cats of roughly the same level\n      const rightIndex = leftIndex === cats.length - 1 ? leftIndex - 1 - getRandom(7) : Math.min(leftIndex + 1 + getRandom(7), cats.length);\n\n      setCurrentMash({\n        left: cats[leftIndex],\n        right: cats[rightIndex],\n      });\n    });\n  }, [loadCats]);\n\n  const updateScore = useCallback(\n    async (winner: Cat) => {\n      if (!currentMash) return;\n\n      const loser = currentMash.left.catId !== winner.catId ? currentMash.left : currentMash.right;\n\n      const [winnerScore, loserScore] = calculateNewScores(winner.score, loser.score);\n\n      await API.put('cats', `/cats/${winner.catId}`, { body: { score: winnerScore } });\n      await API.put('cats', `/cats/${loser.catId}`, { body: { score: loserScore } });\n    },\n    [currentMash],\n  );\n\n  const voteFor = useCallback((cat: Cat) => updateScore(cat).then(newMash), [updateScore, newMash]);\n\n  const voteForLeft = useCallback(() => {\n    currentMash && voteFor(currentMash.left).then();\n  }, [currentMash, voteFor]);\n\n  const voteForRight = useCallback(() => {\n    currentMash && voteFor(currentMash.right).then();\n  }, [currentMash, voteFor]);\n\n  // init first mash\n  useEffect(\n    () => newMash(),\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  return (\n    <AppContext.Provider value={{ currentMash, loadCats, newMash, updateScore, voteForLeft, voteForRight }}>{children}</AppContext.Provider>\n  );\n};\n\nexport const useApp = (): AppContext => useContext(AppContext);\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Loader, Scores, Title, Vote } from 'Components';\nimport { useLocation } from 'react-router-dom';\nimport { useApp } from 'Stores';\n\nconst styles = css`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n\n  background: #200122;\n  background: linear-gradient(105deg, #6f0000, #200122);\n\n  > * {\n    width: 1280px;\n    margin: 0 auto;\n  }\n\n  > main {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n`;\n\nexport const App: React.FC = () => {\n  const { pathname } = useLocation();\n  const { currentMash } = useApp();\n\n  return (\n    <div className={styles}>\n      <Title />\n\n      <main>{currentMash ? <Vote /> : <Loader white />}</main>\n\n      <Scores isOpen={pathname === '/scores'} />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { Loader } from 'Components';\n\nconst styles = css`\n  position: relative;\n  height: 250px;\n  width: 250px;\n  overflow: hidden;\n  border: 4px solid darkgrey;\n  background-color: darkgrey;\n  border-radius: 15%;\n  box-sizing: border-box;\n  box-shadow: 0 4px 4px #00000040;\n\n  transition: transform 0.5s cubic-bezier(0.68, -0.6, 0.32, 1.6);\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n\n    > .score {\n      opacity: 1;\n      user-select: none;\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      color: black;\n      background: darkgray;\n      padding: 4px;\n      border-radius: 16px;\n      line-height: 20px;\n      font-size: 20px;\n    }\n  }\n\n  > .loader {\n    max-height: 100%;\n    max-width: 50%;\n    margin: auto;\n  }\n\n  > img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    object-position: center;\n    user-select: none;\n\n    transition: opacity 0.5s ease;\n  }\n\n  > .rank {\n    user-select: none;\n    font-family: 'Noticia Text', serif;\n    font-weight: bold;\n    font-size: 60px;\n    line-height: 50px;\n    position: absolute;\n    left: 8px;\n    bottom: 8px;\n\n    background-color: #485461;\n    background-image: linear-gradient(315deg, #485461 0%, #28313b 74%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -webkit-text-stroke: 2px white;\n  }\n\n  > .score {\n    opacity: 0;\n    transition: opacity 0.25s ease-in-out;\n  }\n`;\n\nconst smallStyles = css`\n  height: 150px;\n  width: 150px;\n`;\n\ninterface Props {\n  srcUrl: string;\n  alt: string;\n  score?: number;\n  small?: boolean;\n  rank?: number;\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  className?: string;\n}\n\nexport const Cat: React.FC<Props> = ({ srcUrl, alt, small = false, score, rank, onClick, className }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  const handleOnLoad = () => setLoaded(true);\n\n  return (\n    <div className={cx(styles, small && smallStyles, className)} onClick={onClick}>\n      {!loaded && <Loader className=\"loader\" />}\n      <img src={srcUrl} alt={alt} onLoad={handleOnLoad} style={{ opacity: loaded ? '1' : '0' }} />\n      {rank && <span className=\"rank\">{rank}</span>}\n      {score && <div className=\"score\">{score}</div>}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Cat, Loader, PositionedCat } from 'Components';\nimport { css } from 'emotion';\nimport { useApp } from 'Stores';\n\nconst styles = css`\n  > ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  > ul.podium {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    gap: 16px 16px;\n    grid-template-areas: 'first first' 'second third';\n    justify-items: center;\n\n    > li:first-of-type {\n      grid-area: first;\n    }\n\n    > li:nth-of-type(2) {\n      grid-area: second;\n    }\n\n    > li:nth-of-type(3) {\n      grid-area: third;\n    }\n  }\n\n  > ul.others {\n    margin: 0;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    padding-bottom: 32px;\n\n    > li {\n      margin-top: 16px;\n      margin-left: 16px;\n    }\n  }\n`;\n\nconst loaderStyles = css`\n  height: 80vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CatList: React.FC = () => {\n  const { loadCats } = useApp();\n  const [loading, setLoading] = useState(true);\n  const [cats, setCats] = useState<Array<Cat>>([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      try {\n        const cats = await loadCats();\n        setCats(cats);\n      } catch (e) {\n        setError(true);\n      }\n\n      setTimeout(() => setLoading(false), 1500);\n    };\n\n    onLoad().then();\n  }, [loadCats]);\n\n  if (error) {\n    return <span>An error occurred.</span>;\n  }\n\n  if (loading) {\n    return (\n      <div className={loaderStyles}>\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles}>\n      <ul className=\"podium\">\n        {cats.slice(0, 3).map(({ catId, imageUrl, score }, i) => (\n          <PositionedCat key={catId} id={catId} imgUrl={imageUrl} score={score} position={i + 1} />\n        ))}\n      </ul>\n      <ul className=\"others\">\n        {cats.slice(3).map(({ catId, imageUrl, score }, i) => (\n          <li key={catId}>\n            <Cat srcUrl={imageUrl} alt={`cat ${catId}`} score={score} rank={i + 4} small />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport Lottie from 'lottie-react-web';\nimport animationData from 'Assets/cats-loader.json';\nimport animationDataWhite from 'Assets/cats-loader-white.json';\nimport { css, cx } from 'emotion';\n\nconst styles = css`\n  height: 300px;\n  width: 300px;\n`;\n\ninterface Props {\n  white?: boolean;\n  className?: string;\n}\n\nexport const Loader: React.FC<Props> = ({ white = false, className }) => (\n  <div className={cx(styles, className)}>\n    <Lottie options={{ animationData: white ? animationDataWhite : animationData }} direction={-1} />\n  </div>\n);\n","import React from 'react';\nimport { Cat } from 'Components';\nimport { css } from 'emotion';\n\nconst styles = css`\n  display: flex;\n\n  > span {\n    font-family: 'Noticia Text', serif;\n    font-weight: bold;\n    font-size: 270px;\n    position: relative;\n    right: -50px;\n    line-height: 250px;\n    user-select: none;\n\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  > .positioned-cat {\n    z-index: 1;\n  }\n`;\n\nconst spanStyles = (position: number) => {\n  let from = '';\n  let to = '';\n\n  switch (position) {\n    case 1:\n      from = '#fec84e';\n      to = '#ffdea8';\n      break;\n    case 2:\n      from = '#f5f7fa';\n      to = '#b8c6db';\n      break;\n    case 3:\n      from = '#f2c17d';\n      to = '#b82e1f';\n      break;\n    default:\n      return '';\n  }\n\n  return css`\n    background: linear-gradient(120deg, ${from} 0%, ${to} 74%);\n  `;\n};\n\ninterface Props {\n  id: string;\n  imgUrl: string;\n  position: number;\n  score?: number;\n}\n\nexport const PositionedCat: React.FC<Props> = ({ id, imgUrl, score, position }) => (\n  <li className={styles}>\n    <span className={spanStyles(position)}>{position}</span>\n    <Cat className=\"positioned-cat\" srcUrl={imgUrl} alt={`cat ${id}`} score={score} />\n  </li>\n);\n","// from AppStore-like UI: https://www.framer.com/api/motion/examples/#ui-patterns\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { css } from 'emotion';\n\nconst styles = css`\n  z-index: 1;\n  background: #000c;\n  will-change: opacity;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n\n  > a {\n    display: block;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100vw;\n  }\n`;\n\ninterface Props {\n  isOpen: boolean;\n}\n\nexport const Overlay: React.FC<Props> = ({ isOpen }) => (\n  <motion.div\n    className={styles}\n    initial={false}\n    animate={{ opacity: isOpen ? 1 : 0 }}\n    transition={{ duration: 0.2 }}\n    style={{ pointerEvents: isOpen ? 'auto' : 'none' }}\n  >\n    <Link to=\"/\" />\n  </motion.div>\n);\n","// from AppStore-like UI: https://www.framer.com/api/motion/examples/#ui-patterns\nimport { RefObject } from 'react';\nimport { useDomEvent, MotionValue } from 'framer-motion';\nimport { spring } from 'popmotion';\nimport { mix } from '@popmotion/popcorn';\nimport { debounce } from 'lodash';\n\ninterface Constraints {\n  top: number;\n  bottom: number;\n}\n\n// Absolute distance a wheel scroll event can travel outside of\n// the defined constraints before we fire a \"snap back\" animation\nconst deltaThreshold = 5;\n\n// If wheel event fires beyond constraints, multiple the delta by this amount\nconst elasticFactor = 0.2;\n\nfunction springTo(value: MotionValue, from: number, to: number) {\n  if (value.isAnimating()) return;\n\n  value.start(complete => {\n    const animation = spring({\n      from,\n      to,\n      velocity: value.getVelocity(),\n      stiffness: 400,\n      damping: 40,\n    }).start({\n      update: (v: number) => value.set(v),\n      complete,\n    });\n\n    return () => animation.stop();\n  });\n}\n\nconst debouncedSpringTo = debounce(springTo, 100);\n\n/**\n * Re-implements wheel scroll for overlflow: hidden elements.\n *\n * Adds Apple Watch crown-style constraints, where the user\n * must continue to input wheel events of a certain delta at a certain\n * speed or the scrollable container will spring back to the nearest\n * constraint.\n *\n * Currently achieves this using event.deltaY and a debounce, which\n * feels pretty good during direct input but it'd be better to increase\n * the deltaY threshold during momentum scroll.\n *\n * TODOs before inclusion in Framer Motion:\n * - Detect momentum scroll and increase delta threshold before spring\n * - Remove padding hack\n * - Handle x-axis\n * - Perhaps handle arrow and space keyboard events?\n *\n * @param ref - Ref of the Element to attach listener to\n * @param y - MotionValue for the scrollable element - might be different to the Element\n * @param constraints - top/bottom scroll constraints in pixels.\n * @param isActive - `true` if this listener should fire.\n */\nexport const useWheelScroll = (\n  ref: RefObject<Element>,\n  y: MotionValue<number>,\n  constraints: Constraints | null,\n  onWheelCallback: (e: WheelEvent) => void,\n  isActive: boolean,\n) => {\n  const onWheel = (event: WheelEvent) => {\n    event.preventDefault();\n\n    const currentY = y.get();\n    let newY = currentY - event.deltaY;\n    let startedAnimation = false;\n    const isWithinBounds = constraints && newY >= constraints.top && newY <= constraints.bottom;\n\n    if (constraints && !isWithinBounds) {\n      newY = mix(currentY, newY, elasticFactor);\n\n      if (newY < constraints.top) {\n        if (event.deltaY <= deltaThreshold) {\n          springTo(y, newY, constraints.top);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.top);\n        }\n      }\n\n      if (newY > constraints.bottom) {\n        if (event.deltaY >= -deltaThreshold) {\n          springTo(y, newY, constraints.bottom);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.bottom);\n        }\n      }\n    }\n\n    if (!startedAnimation) {\n      y.stop();\n      y.set(newY);\n    } else {\n      debouncedSpringTo.cancel();\n    }\n\n    onWheelCallback(event);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  useDomEvent(ref, 'wheel', isActive && onWheel, { passive: false });\n};\n","import React, { useRef } from 'react';\nimport { css, cx } from 'emotion';\nimport { Overlay } from './Subcomponents';\nimport { Link, useHistory } from 'react-router-dom';\nimport { motion, useMotionValue } from 'framer-motion';\nimport { useScrollConstraints, useWheelScroll } from './Utils';\nimport { CatList } from 'Components';\n\nconst openSpring = { type: 'spring', stiffness: 200, damping: 30 };\nconst closeSpring = { type: 'spring', stiffness: 300, damping: 35 };\n\nconst dismissDistance = 150;\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  > .card-content-container {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: block;\n    pointer-events: none;\n\n    > .open-link {\n      pointer-events: auto;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n\n    > .card-content {\n      position: relative;\n      width: 200px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 32px;\n      padding: 0 32px;\n      user-select: none;\n      pointer-events: auto;\n      margin: 0 auto;\n\n      background: #bc4e9c;\n      background: linear-gradient(15deg, #f80759, #bc4e9c);\n\n      border-top-left-radius: 15px;\n      border-top-right-radius: 15px;\n      box-shadow: 0px -2px 4px 4px #00000040;\n\n      transition: height 0.5s cubic-bezier(0.68, -0.6, 0.32, 1.6), border-radius 0.5s ease-in-out;\n    }\n\n    &:hover > .card-content {\n      height: 48px;\n      cursor: pointer;\n    }\n  }\n\n  > .card-content-container.open {\n    top: 0;\n    left: 0;\n    right: 0;\n    position: fixed;\n    z-index: 1;\n    overflow: hidden;\n    padding: 32px 0;\n\n    > .card-content {\n      display: flex;\n      flex-direction: column;\n      height: auto;\n      margin: auto;\n      width: 1200px;\n      overflow: hidden;\n\n      border-radius: 15px;\n    }\n  }\n`;\n\ninterface Props {\n  isOpen: boolean;\n}\n\n// adapted from AppStore-like UI: https://www.framer.com/api/motion/examples/#ui-patterns\nexport const Scores: React.FC<Props> = ({ isOpen }) => {\n  const { push } = useHistory();\n\n  const y = useMotionValue(0);\n  const zIndex = useMotionValue(isOpen ? 2 : 0);\n\n  const checkSwipeToDismiss = () => y.get() > dismissDistance && push('/');\n  const checkZIndex = () => (isOpen ? zIndex.set(2) : zIndex.set(0));\n\n  const cardRef = useRef<HTMLDivElement>(null);\n  const constraints = useScrollConstraints(cardRef, isOpen);\n\n  const containerRef = useRef(null);\n  useWheelScroll(containerRef, y, constraints, checkSwipeToDismiss, isOpen);\n\n  return (\n    <footer className={styles}>\n      <Overlay isOpen={isOpen} />\n      <div ref={containerRef} className={cx('card-content-container', isOpen && 'open')}>\n        <motion.div\n          ref={cardRef}\n          className=\"card-content\"\n          style={{ zIndex, y }}\n          layoutTransition={isOpen ? openSpring : closeSpring}\n          drag={isOpen ? 'y' : false}\n          dragConstraints={constraints}\n          onDrag={checkSwipeToDismiss}\n          onUpdate={checkZIndex}\n        >\n          {isOpen ? <CatList /> : <span>Scruter les scores</span>}\n        </motion.div>\n        {!isOpen && <Link to=\"/scores\" className=\"open-link\" />}\n      </div>\n    </footer>\n  );\n};\n","// from AppStore-like UI: https://www.framer.com/api/motion/examples/#ui-patterns\nimport React, { useState, useEffect } from 'react';\nimport useResizeObserver from 'use-resize-observer';\n\ninterface Constraints {\n  top: number;\n  bottom: number;\n}\n\n/**\n * Calculate the top/bottom scroll constraints of a full-screen element vs the viewport\n */\nexport const useScrollConstraints = (ref: React.RefObject<HTMLDivElement>, measureConstraints: boolean): Constraints => {\n  const [constraints, setConstraints] = useState<Constraints>({\n    top: 0,\n    bottom: 0,\n  });\n\n  const { height } = useResizeObserver({ ref });\n\n  useEffect(() => {\n    if (!measureConstraints) return;\n\n    const element = ref.current;\n    if (!element) return;\n\n    const viewportHeight = window.innerHeight;\n    const contentTop = element.offsetTop;\n    const contentHeight = element.offsetHeight;\n    const scrollableViewport = viewportHeight - contentTop * 2;\n    const top = Math.min(scrollableViewport - contentHeight, 0);\n\n    setConstraints({ top, bottom: 0 });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [measureConstraints, height]);\n\n  return constraints;\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  user-select: none;\n\n  > h1 {\n    font-family: 'Trade Winds', cursive;\n    font-size: 105px;\n    line-height: 75px;\n    padding-top: 32px;\n  }\n\n  > h5 {\n    font-size: 30px;\n    line-height: 40px;\n  }\n`;\n\nexport const Title: React.FC = () => (\n  <header className={styles}>\n    <h1>catmash</h1>\n    <h5>Lequel sera le plus choupinou ?</h5>\n  </header>\n);\n","import React from 'react';\nimport { css } from 'emotion';\n\nconst styles = css`\n  font-family: 'Permanent Marker', cursive;\n  font-size: 45px;\n  user-select: none;\n\n  > .letter-v,\n  > .letter-s {\n    position: relative;\n  }\n\n  > .letter-v {\n    top: -5px;\n  }\n\n  > .letter-s {\n    bottom: -5px;\n  }\n`;\n\nexport const Versus: React.FC = () => (\n  <div className={styles}>\n    <span className=\"letter-v\">V</span>\n    <span className=\"letter-s\">S</span>\n  </div>\n);\n","import React from 'react';\nimport { Cat, Versus } from 'Components';\nimport { useApp } from 'Stores';\n\nexport const Vote: React.FC = () => {\n  const { currentMash, voteForLeft, voteForRight } = useApp();\n\n  return currentMash ? (\n    <>\n      <Cat srcUrl={currentMash.left.imageUrl} alt={`cat ${currentMash.left.catId}`} onClick={voteForLeft} />\n      <Versus />\n      <Cat srcUrl={currentMash.right.imageUrl} alt={`cat ${currentMash.right.catId}`} onClick={voteForRight} />\n    </>\n  ) : null;\n};\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  apiGateway: {\n    URL: 'https://thzoo76lhk.execute-api.eu-west-3.amazonaws.com/prod',\n    REGION: 'eu-west-3',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'Components';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { AppProvider } from 'Stores';\n\nimport { Amplify } from 'aws-amplify';\nimport awsConfig from 'aws-config';\n\nAmplify.configure({\n  API: {\n    endpoints: [\n      {\n        name: 'cats',\n        endpoint: awsConfig.apiGateway.URL,\n        region: awsConfig.apiGateway.REGION,\n      },\n    ],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <BrowserRouter>\n        <Route path={['/scores', '/']} component={App} />\n      </BrowserRouter>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}